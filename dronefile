 #include <MPU6050_tockn.h>

#include <Wire.h>
MPU6050 mpu6050(Wire);

long timer = 0; 
//int led = 13;                
      // the pin that the LED is atteched to
int sensor = 2;              // the pin that the sensor is atteched to
int state = LOW;             // by default, no motion detected
int val = 0;                 // variable to store the sensor status (value)
int trigPin=9;
int ecopin=10;

void setup() {
      // initalize LED as an output
      Wire.begin();
  mpu6050.begin();
  mpu6050.calcGyroOffsets(true);
  pinMode(sensor, INPUT);    // initialize sensor as an input
 // pinMode(led,OUTPUT);
  pinMode(trigPin,OUTPUT);
  pinMode(ecopin,INPUT);
  Serial.begin(9600);       // initialize serial
}

void loop()
{
  long duration,distance;
  mpu6050.update();

  if(millis() - timer > 1000){
    
    Serial.println("=======================================================");
    Serial.print("temp : ");Serial.println(mpu6050.getTemp());
    Serial.print("accX : ");Serial.print(mpu6050.getAccX());
    Serial.print("  accY : ");Serial.print(mpu6050.getAccY());
    Serial.print("  accZ : ");Serial.println(mpu6050.getAccZ());
  
    Serial.print("gyroX : ");Serial.print(mpu6050.getGyroX());
    Serial.print("  gyroY : ");Serial.print(mpu6050.getGyroY());
    Serial.print("  gyroZ : ");Serial.println(mpu6050.getGyroZ());
  
    Serial.print("accAngleX : ");Serial.print(mpu6050.getAccAngleX());
    Serial.print("  accAngleY : ");Serial.println(mpu6050.getAccAngleY());
  
    Serial.print("gyroAngleX : ");Serial.print(mpu6050.getGyroAngleX());
    Serial.print("  gyroAngleY : ");Serial.print(mpu6050.getGyroAngleY());
    Serial.print("  gyroAngleZ : ");Serial.println(mpu6050.getGyroAngleZ());
    
    Serial.print("angleX : ");Serial.print(mpu6050.getAngleX());
    Serial.print("  angleY : ");Serial.print(mpu6050.getAngleY());
    Serial.print("  angleZ : ");Serial.println(mpu6050.getAngleZ());
    Serial.println("=======================================================");
    timer = millis();
  digitalWrite(trigPin,HIGH);
  delayMicroseconds(1000);
 digitalWrite(trigPin,LOW);
 duration=pulseIn(ecopin,HIGH);
 distance=(duration/2)/29.1;
 Serial.print(distance);
 Serial.println("CM");
 delay(10);
  val = digitalRead(sensor);   // read sensor value
  if (val == HIGH) {           // check if the sensor is HIGH
   // digitalWrite(led, HIGH);   // turn LED ON
    delay(100);                // delay 100 milliseconds 
    if (state == LOW)
 {
      Serial.println("Motion detected!"); 
      state = HIGH;       // update variable state to HIGH
    }
  } 
  else {
    //  digitalWrite(led, LOW); // turn LED OFF
      delay(200);             // delay 200 milliseconds 
      if (state == HIGH){
        Serial.println("Motion stopped!");
        state = LOW;       // update variable state to LOW
    }
  }
  }
}
